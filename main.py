#–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º
import telebot                                               # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–æ—Ç–∞
import asyncio                                               # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
import json
from telebot import types
from netschoolapi import NetSchoolAPI

#–¢–æ–∫–µ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
bot = telebot.TeleBot('')

#–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User:
    id = 0                                                       # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userlogin = ''                                               # –õ–æ–≥–∏–Ω
    password = ''                                                # –ü–∞—Ä–æ–ª—å
    schoolname = ''                                              # –ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã
    diary = ''                                                   # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–Ω–µ–≤–Ω–∏–∫–∞
    last_message = ''                                            # –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞

    #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–µ–≤–æ–º—É –≥–æ—Ä–æ–¥—É
    async def login(self, password, schoolname):
        ns = NetSchoolAPI('https://region.obramur.ru')               # –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç. –ß–µ—Ä–µ–∑ –Ω–µ–≥–æ –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ê–ü–ò —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞
        await ns.login(self, password, schoolname)              # –õ–æ–≥–∏–Ω–∏–º—Å—è

    # —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞
    async def logout(self):
        ns = NetSchoolAPI('https://region.obramur.ru')               # –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç. –ß–µ—Ä–µ–∑ –Ω–µ–≥–æ –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ê–ü–ò —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞
        await ns.logout()                                            # –†–∞–∑–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!

user_data = {
  "id": User.id,
  "username": User.userlogin,
  "password": User.password,
  "schoolname": User.schoolname,
  "diary": User.diary,
  "last_message": User.last_message
}

# with open("data/data.json", "w") as write_file:
#     json.dump(user_data, write_file, indent=4)
#
# with open("data/data.json", "r") as read_file:
#     user_data2 = json.load(read_file)

#–°–ª—É—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
@bot.message_handler(commands=['start', 'help'])
def start(message): #–§—É–Ω–∫—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ —Å—Ç–∞—Ä—Ç
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫–Ω–æ–ø–æ–∫
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è") #–ö–Ω–æ–ø–∫–∞ 1
    btn2 = types.KeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è") #–ö–Ω–æ–ø–∫–∞ 2
    markup.add(btn1)
    markup.add(btn2)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫ –≤ —Å–µ—Ç–µ–≤–æ–º –≥–æ—Ä–æ–¥–µ!", reply_markup=markup)
    bot.send_message(message.from_user.id, "–Ø –º–æ–≥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Ç–µ–∫—É—â–µ–µ –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ, –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º ", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        bot.send_message(message.from_user.id, '–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! –•–≤–∞—Ç–∏—Ç —Ç–µ—Ä—è—Ç—å –≤—Ä–µ–º—è! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, —Å–Ω–∞—á–∞–ª–∞ <b>–∞–≤—Ç–æ—Ä–∏–∑—É–π—Å—è!</b>',parse_mode='html')
    elif message.text == '–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è':
        msg = bot.send_message(message.from_user.id, '–ü–æ–∫–∞ —è –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä—É—é—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –Ω–æ —Å–∫–æ—Ä–æ —è –±—É–¥—É –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', parse_mode='Markdown')
        try:
            #asyncio.run(User.login(User.userlogin, User.password, User.schoolname))
            asyncio.run(User.logout(User.userlogin))  #–ü–æ–∫–∞ —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–º—Å—è
            bot.send_message(message.from_user.id, '–ó–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è', parse_mode='Markdown')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.KeyboardButton('–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ')
            btn2 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
            btn3 = types.KeyboardButton('–û—Ü–µ–Ω–∫–∏')
            btn4 = types.KeyboardButton('–†–∞–∑–ª–æ–≥–∏–Ω–∏—Ç—Å—è')
            markup.add(btn1, btn2, btn3, btn4)
            bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∑–∞–ø—Ä–æ—Å', reply_markup=markup)  # –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
            bot.register_next_step_handler(msg, diaryWork())
        except Exception as exep:
            bot.send_message(message.from_user.id, f'–£–ø—Å! —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ö–æ–¥ –æ—à–∏–±–∫–∏: {type(exep)}', parse_mode='Markdown')

def diaryWork(message):
        if message.text == '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∑–∞–ø—Ä–æ—Å':
            if message.text == '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ':
                bot.send_message(message.from_user.id, '–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ!' + '[–ü–æ–∫–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –°–µ—Ç–µ–≤–æ–π –≥–æ—Ä–æ–¥](https://sgo.prim-edu.ru)', parse_mode='Markdown')
            elif message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
                bot.send_message(message.from_user.id, '–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ!' + '[–ü–æ–∫–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –°–µ—Ç–µ–≤–æ–π –≥–æ—Ä–æ–¥](https://sgo.prim-edu.ru)', parse_mode='Markdown')
            elif message.text == '–û—Ü–µ–Ω–∫–∏':
                bot.send_message(message.from_user.id, '–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –û—Ü–µ–Ω–∫–∏! ' + '[–ü–æ–∫–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –°–µ—Ç–µ–≤–æ–π –≥–æ—Ä–æ–¥](https://sgo.prim-edu.ru)', parse_mode='Markdown')
            elif message.text == '–†–∞–∑–ª–æ–≥–∏–Ω–∏—Ç—Å—è':
                try:
                    bot.send_message(message.from_user.id, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É!', parse_mode='Markdown')
                    asyncio.run(User.logout())
                except:
                    bot.send_message(message.from_user.id, '–£–ø—Å! —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!', parse_mode='Markdown')

bot.polling(none_stop=True, interval=0) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å_