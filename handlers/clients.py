#####################################################
#  –≠—Ç–æ—Ç —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π #
#  —á–∞—Å—Ç—å—é —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç–∞ !                          #
#####################################################

import logging  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π –≤ –≤–∏–¥–µ –õ–æ–≥–æ–≤

from aiogram import types, Dispatcher  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ aiogram, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ —Å–æ–±—ã—Ç–∏–π
from aiogram.dispatcher import FSMContext  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ aiogram, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–≤—Ç–æ–º–∞—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π
from aiogram.dispatcher.filters.state import StatesGroup, State  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ aiogram, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
from netschoolapi import NetSchoolAPI  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ç–µ–≤—ã–º –≥–æ—Ä–æ–¥–æ–º

from create_bot import bot, dp  # –í–∑—è—Ç—å –∏–∑ —Ñ–∞–π–ª–∞ create_bot –ø–æ–ª—è bot –∏ dp
from json_work import write_json, read_json  # –í–∑—è—Ç—å –∏–∑ —Ñ–∞–π–ª–∞ json_work —Ñ—É–Ω–∫—Ü–∏–∏ write_json –∏ read_json
from keyboards import keyboards_client_step1, keyboards_client_step2, \
    keyboards_client_step3, keyboards_client_step4  # –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏–∑ –ø–∞–ø–∫–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏

# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª–∏
logging.basicConfig(level=logging.INFO)


# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User:
    def __init__(self):
        self.id = 0  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.user_login = ''  # –õ–æ–≥–∏–Ω
        self.password = ''  # –ü–∞—Ä–æ–ª—å
        self.school_name = ''  # –ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã
        self.diary = ''  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–Ω–µ–≤–Ω–∏–∫–∞
        self.url = 'https://region.obramur.ru'  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç - –æ–Ω–∞ —É –≤—Å–µ—Ö –≤ –ê–º—É—Ä—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –æ–¥–Ω–∞


# –ö–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
class LocalFSM(StatesGroup):
    id_telegram_user = State()  # –®–∞–≥ 1: –ó–∞–ø–∏—Å—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login = State()  # –®–∞–≥ 2: –ó–∞–ø–∏—Å—å –õ–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    password = State()  # –®–∞–≥ 3: –ó–∞–ø–∏—Å—å –ü–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    password_conf = State()  # –®–∞–≥ 4: –ó–∞–ø–∏—Å—å –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è_–ü–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    SchoolName = State()  # –®–∞–≥ 5: –ó–∞–ø–∏—Å—å –®–∫–æ–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    auth = State()  # –®–∞–≥ 6: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ -> None


# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –®–∫–æ–ª
schools_dict = [
    '–ú–ê–û–£ "–®–∫–æ–ª–∞ ‚Ññ 16 –≥. –ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞"',
    '–ú–ê–û–£ "–®–∫–æ–ª–∞ ‚Ññ26 –≥. –ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞"',
    '–ú–ê–û–£ "–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ 1 –≥.–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞"',
    '–ú–ê–û–£ "–®–∫–æ–ª–∞ ‚Ññ28 –≥. –ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞"',
    '–ú–ê–û–£ "–®–∫–æ–ª–∞ ‚Ññ27 –≥–æ—Ä–æ–¥–∞ –ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞"',
    '–ú–ê–û–£ "–®–∫–æ–ª–∞ ‚Ññ 14 –≥. –ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∞"'
]


# –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
async def start(message: types.Message):  # –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ /start
    await bot.send_sticker(message.from_user.id,
                           sticker='CAACAgEAAxkBAAEIEiBkCqVNHsCtXOfYvGEfsy0Hh6wdbQAC-AEAAjgOghFb9OZ62rUyZC8E')
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫ –≤ —Å–µ—Ç–µ–≤–æ–º –≥–æ—Ä–æ–¥–µ!", reply_markup=keyboards_client_step1)
    await message.answer("–Ø –º–æ–≥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ:\n - üóì*—Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ*,\n - üìö*–¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ*,"
                         "\n - üíØ*–æ—Ü–µ–Ω–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º*", parse_mode='Markdown')


# –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
async def help_pls(message: types.Message):  # –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ /help
    pass
    # –¢—É—Ç –º–Ω–µ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –±–æ—Ç –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ –ø–æ–º–æ—â–∏
    # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–∏–∫–µ—Ä –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –ø–æ–ª–Ω–æ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞! –°–¥–µ–ª–∞—Ç—å!!!!


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def get_text_messages(message: types.Message, state: FSMContext):  # –†–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –ª—é–±–æ–º –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    # -----------------------------------------------------------------------------
    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':  # –ü—Ä–∏ –≤–≤–æ–¥–µ üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è –±—É–¥–µ—Ç ->
        await bot.send_sticker(message.from_user.id,
                               sticker='CAACAgEAAxkBAAEIEhxkCqUsNWrPJxHbGi1p_1-F7CY8LQAC7QEAAjgOghE8J4BsgBeaAy8E')
        await message.answer('–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! üê∂\n‚åõÔ∏è –•–≤–∞—Ç–∏—Ç —Ç–µ—Ä—è—Ç—å –≤—Ä–µ–º—è! \n –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å'
                             ' –¥–∞–Ω–Ω—ã–µ, —Å–Ω–∞—á–∞–ª–∞ *–∞–≤—Ç–æ—Ä–∏–∑—É–π—Å—è!*üîì', reply_markup=keyboards_client_step2,
                             parse_mode='Markdown')
    # -----------------------------------------------------------------------------
    elif message.text == 'üîì –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è':  # –ü—Ä–∏ –≤–≤–æ–¥–µ üîì –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –±—É–¥–µ—Ç ->
        user_exist = read_json("data/data.json")
        if message.from_user.id != user_exist['id']:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω–µ–µ –∏–ª–∏ –Ω–µ—Ç (–µ—Å–ª–∏ –Ω–µ—Ç)
            await message.answer('–û—Ç–ª–∏—á–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å –¥–µ–ª–æ –∑–∞ –º–∞–ª—ã–º! üëç\n'
                                 '- –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ - üë§*–õ–æ–≥–∏–Ω* –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–µ—Ç–µ–≤–æ–π –≥–æ—Ä–æ–¥.\n'
                                 '- *–ù–∞–ø—Ä–∏–º–µ—Ä*: –ò–≤–∞–Ω–æ–≤–í1', parse_mode='Markdown')
            await message.answer('\- *–ü–æ–¥—Å–∫–∞–∑–∫–∞*: ||–û–±—ã—á–Ω–æ –µ–≥–æ –≤–∞–º –≤—ã–¥–∞—é—Ç –≤ —à–∫–æ–ª–µ||', parse_mode='Markdownv2')
            await state.set_state(LocalFSM.login.state)
        else:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω–µ–µ –∏–ª–∏ –Ω–µ—Ç (–µ—Å–ª–∏ –¥–∞)
            await message.answer('–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤—ã–≤–∞–ª–∏—Å—å —Ä–∞–Ω–µ–µ! –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤–∞—Å –≤ —Ä–∞–±–æ—á–∏–π —Ä–µ–∂–∏–º! üí™')
            await state.set_state(LocalFSM.auth.state)
    # -----------------------------------------------------------------------------
    elif message.text == 'üìö –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ':  # –ü—Ä–∏ –≤–≤–æ–¥–µ üìö –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –±—É–¥–µ—Ç ->
        await message.answer(f'–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ!',
                             reply_markup=keyboards_client_step3, parse_mode='Markdown')
        # –¢—É—Ç –∏–¥—ë—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º - –µ–≥–æ —è –¥–æ–±–∞–≤–ª—é –ø–æ–∑–¥–Ω–µ–µ
    # -----------------------------------------------------------------------------
    elif message.text == 'üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':  # –ü—Ä–∏ –≤–≤–æ–¥–µ üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç ->
        await message.answer(f'–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ!',
                             reply_markup=keyboards_client_step3, parse_mode='Markdown')
        # –¢—É—Ç –∏–¥—ë—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º - –µ–≥–æ —è –¥–æ–±–∞–≤–ª—é –ø–æ–∑–¥–Ω–µ–µ
    # -----------------------------------------------------------------------------
    elif message.text == 'üíØ –û—Ü–µ–Ω–∫–∏':  # –ü—Ä–∏ –≤–≤–æ–¥–µ üíØ –û—Ü–µ–Ω–∫–∏ –±—É–¥–µ—Ç ->
        await message.answer(f'–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –û—Ü–µ–Ω–∫–∏!',
                             reply_markup=keyboards_client_step3, parse_mode='Markdown')
        # –¢—É—Ç –∏–¥—ë—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ü–µ–Ω–∫–∞–º–∏ - –µ–≥–æ —è –¥–æ–±–∞–≤–ª—é –ø–æ–∑–¥–Ω–µ–µ
    # -----------------------------------------------------------------------------
    elif message.text == 'üö™ –†–∞–∑–ª–æ–≥–∏–Ω–∏—Ç—Å—è':  # –ü—Ä–∏ –≤–≤–æ–¥–µ üö™ –†–∞–∑–ª–æ–≥–∏–Ω–∏—Ç—Å—è –±—É–¥–µ—Ç ->
        try:  # –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            user = User()  # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            connection = NetSchoolAPI(user.url)  # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–µ–≤–æ–º—É –≥–æ—Ä–æ–¥—É
            await connection.logout()  # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç —Å–µ—Ç–µ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞
            await bot.send_sticker(message.from_user.id,
                                   sticker='CAACAgEAAxkBAAEIG0JkDfSK95D5Ud2CEm1i5T4zQLzIJgAC5QEAAjgOghGurgLq55jGpC8E')
            await message.answer('–í—ã *–≤—ã—à–ª–∏* –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞!üö™ \n *–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É!*',
                                 reply_markup=keyboards_client_step1,
                                 parse_mode='Markdown')
        except Exception as e:  # –ï—Å–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π —Å–ª—É—á–∏–ª–æ—Å—å ->
            await bot.send_sticker(message.from_user.id,
                                   sticker='CAACAgEAAxkBAAEIG0RkDfS4-XLEyIEaFQceYrzNsXrKMgAC-QEAAjgOghHcO4dxtT-qti8E')
            await message.answer(f'–£–ø—Å! —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ö–æ–¥ –æ—à–∏–±–∫–∏: {type(e)}', parse_mode='Markdown')


# –§—É–Ω–∫—Ü–∏—è-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def state_login(message: types.Message, state: FSMContext):  # –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç —Å—é–¥–∞ –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è
    async with state.proxy() as data:
        data['id_telegram_user'] = message.from_user.id  # –•—Ä–∞–Ω–µ–Ω–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¢–µ–ª–µ–≥—Ä–∞–º–º
        data['login'] = message.text  # –•—Ä–∞–Ω–µ–Ω–∏–µ –õ–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –°–µ—Ç–µ–≤—ã–º –≥–æ—Ä–æ–¥–æ–º
    await message.reply(f'–í–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ üë§–ª–æ–≥–∏–Ω: {message.text}')
    await message.answer(f'üîë–í–≤–µ–¥–∏—Ç–∏–µ –≤–∞—à *–ø–∞—Ä–æ–ª—å* –æ—Ç –∫–∞–±–∏–Ω–µ—Ç–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞!\n'
                         f'--------------------------------------------------\n'
                         f'‚ÄºÔ∏è–û–±—Ä–∞—â–∞—é –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –µ—Å–ª–∏ –≤—ã –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å - –µ–≥–æ –º–æ–∂–Ω–æ'
                         f'–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ *–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞* –∏–ª–∏ *–º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è* –°–µ—Ç–µ–≤–æ–π –≥–æ—Ä–æ–¥!',
                         parse_mode='Markdown')
    await LocalFSM.next()  # –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ø–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É —Å–æ–±—ã—Ç–∏–π -> –ü–∞—Ä–æ–ª—å


# –§—É–Ω–∫—Ü–∏—è-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def state_password(message: types.Message, state: FSMContext):  # –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç —Å—é–¥–∞ –ø–æ—Å–ª–µ –í–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
    async with state.proxy() as data:
        data['password'] = message.text  # –•—Ä–∞–Ω–µ–Ω–∏–µ –ü–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –°–µ—Ç–µ–≤—ã–º –≥–æ—Ä–æ–¥–æ–º
    await message.reply(f'–í–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ üîë–ø–∞—Ä–æ–ª—å: ||{message.text}||', parse_mode="markdownv2")
    await message.answer(f'–í–≤–µ–¥–∏—Ç–µ üîë–ø–∞—Ä–æ–ª—å –µ—â—ë —Ä–∞–∑ –¥–ª—è *–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!*', parse_mode="Markdown")
    await LocalFSM.next()  # –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ø–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É —Å–æ–±—ã—Ç–∏–π -> –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ_–ü–∞—Ä–æ–ª—è


# –§—É–Ω–∫—Ü–∏—è-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def state_password_conf(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['password_conf'] = message.text  # –•—Ä–∞–Ω–µ–Ω–∏–µ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –°–µ—Ç–µ–≤—ã–º –≥–æ—Ä–æ–¥–æ–º
    if data['password'] == data['password_conf']:  # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∏ –ø–∞—Ä–æ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        await message.reply(f'–í–≤–µ–¥–µ–Ω–Ω–æ–µ –≤–∞–º–∏ üîë–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: ||{message.text}||', parse_mode="markdownv2")
        await message.answer(f'–ü–∞—Ä–æ–ª–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç!\n'
                             f'--------------------------------------------------\n'
                             f'—Ç–µ–ø–µ—Ä—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É üè´*—à–∫–æ–ª—É* –∏–∑ —Å–ø–∏—Å–∫–∞!',
                             reply_markup=keyboards_client_step4, parse_mode="Markdown")
        await LocalFSM.next()  # –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ø–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É —Å–æ–±—ã—Ç–∏–π -> –í—ã–±–æ—Ä —à–∫–æ–ª—ã
    else:  # –ï—Å–ª–∏ –ø–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–ª–∏
        await bot.send_sticker(message.from_user.id,
                               sticker='CAACAgEAAxkBAAEIG0ZkDfY7MW3rRPfOfAZyqgvIxgprkgAC8gEAAjgOghFkeRhU3RO6Bi8E')
        await message.answer(f'‚ùóÔ∏è –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞! \n'
                             f'üîë–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑ —Å–≤–æ–π *–æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–æ–ª—å*!',
                             parse_mode='Markdown')
        await state.set_state(LocalFSM.password.state)  # –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É <- –ü–∞—Ä–æ–ª—å


# –§—É–Ω–∫—Ü–∏—è-—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –û–±—Ä–∞—Ç–Ω—ã–º –≤—ã–∑–æ–≤–æ–º - –¥–ª—è –≤—ã–±–æ—Ä–∞ —à–∫–æ–ª—ã –∏–∑ —Å–ø–∏—Å–∫–∞
@dp.callback_query_handler(text_contains="School_", state=LocalFSM.SchoolName)
async def state_school_name(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data_json = {  # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä–∏–∫ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            'id': int(data['id_telegram_user']),
            'user_login': str(data['login']),
            'password': str(data['password']),
            'school_name': schools_dict[int(callback.data.replace('School_', ''))],
            'diary': None
        }
    write_json(data_json, "data/data.json")  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–ª–æ–≤–∞—Ä–∏–∫ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö data.json
    print(read_json("data/data.json"))  # –ü—Ä–æ–≤–µ—Ä–∫–∞ - –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ data.json
    await callback.message.reply(f"–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–º–∏ üè´—à–∫–æ–ª–∞: {schools_dict[int(callback.data.replace('School_', ''))]}")
    await callback.message.answer(
        f'üåê–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –µ—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å '
        f'<a href="https://www.consultant.ru/document/cons_doc_LAW_61801/315f051396c88f1e4f827ba3f2ae313d999a1873/"><b>'
        f'—É—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö</b></a>! –ò–ª–∏ –ø–æ–∫–∏–Ω—å—Ç–µ –±–æ—Ç',
        parse_mode='html')
    await state.set_state(LocalFSM.auth.state)  # –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ø–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É —Å–æ–±—ã—Ç–∏–π -> –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è


# –§—É–Ω–∫—Ü–∏—è-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –°–µ—Ç–µ–≤–æ–º –≥–æ—Ä–æ–¥–µ
async def state_auth(message: types.Message, state: FSMContext):
    try:  # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–ª–æ–≤ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        json_data = read_json("data/data.json")  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
        user = User()  # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
        user.user_login = json_data['user_login']  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–ª–∞—Å—Å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ —Ñ–∞–π–ª–∞
        user.password = json_data['password']
        user.school_name = json_data['school_name']
        connection = NetSchoolAPI(user.url)  # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await connection.login(user.user_login, user.password, user.school_name)  # –õ–æ–≥–∏–Ω–∏–º—Å—è
        await bot.send_sticker(message.from_user.id,
                               sticker='CAACAgEAAxkBAAEIEhRkCqJbO7paRvBXqoEqNJHqfkPMwQACLgEAAmlAwUU75COP0TwvfC8E')
        await message.answer(f'–°–ø–∞—Å–∏–±–æ! –ú—ã –∑–∞–ø–æ–º–Ω–∏–ª–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –±—ã–ª–æ –Ω–∏—á–µ–≥–æ –≤–≤–æ–¥–∏—Ç—å!')
        await message.answer('–ó–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è! ‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∑–∞–ø—Ä–æ—Å', reply_markup=keyboards_client_step3)
        await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —à–∞–≥
    except Exception as e:  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–ª—É—á–∏–ª–∞—Å—å
        print(type(e))
        if str(type(e)) == "<class 'netschoolapi.errors.SchoolNotFoundError'>":  # –û—à–∏–±–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –®–∫–æ–ª—ã
            await bot.send_sticker(message.from_user.id,
                                   sticker='CAACAgEAAxkBAAEIG0RkDfS4-XLEyIEaFQceYrzNsXrKMgAC-QEAAjgOghHcO4dxtT-qti8E')
            await message.answer(f'*–£–ø—Å!* —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ *—à–∫–æ–ª—É*!',
                                 reply_markup=types.ReplyKeyboardRemove(),
                                 parse_mode='Markdown')
            await message.answer(f'–í–≤–µ–¥–∏—Ç–µ üè´*—à–∫–æ–ª—É* –µ—â—ë —Ä–∞–∑ –∏ –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º –≤–∞—Å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å!',
                                 reply_markup=keyboards_client_step4,
                                 parse_mode='Markdown')
            await state.set_state(LocalFSM.SchoolName.state)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥ <- –í–≤–æ–¥–∞ —à–∫–æ–ª—ã
        elif str(
                type(
                    e)) == "<class 'netschoolapi.errors.AuthError'>":  # –û—à–∏–±–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –õ–æ–≥–∏–Ω–∞ –∏–ª–∏ –ø–∞—Ä–æ–ª—è
            await bot.send_sticker(message.from_user.id,
                                   sticker='CAACAgEAAxkBAAEIG0RkDfS4-XLEyIEaFQceYrzNsXrKMgAC-QEAAjgOghHcO4dxtT-qti8E')
            await message.answer(f'*–£–ø—Å!* —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! \n–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ *–ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å*!'
                                 f'–í–≤–µ–¥–∏—Ç–µ üë§*–ª–æ–≥–∏–Ω* –∏ üîë*–ø–∞—Ä–æ–ª—å* –µ—â—ë —Ä–∞–∑ - –∏ –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º –≤–∞—Å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å'
                                 f'\n------------------------------------------------------------------------'
                                 f'–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, –ø–µ—Ä–≤—ã–º –≤–≤–æ–¥–∏—Ç—Å—è üë§*–ª–æ–≥–∏–Ω*!',
                                 reply_markup=types.ReplyKeyboardRemove(),
                                 parse_mode='Markdown')
            await state.set_state(LocalFSM.login.state)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥ <- –í–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
        else:  # –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            await bot.send_sticker(message.from_user.id,
                                   sticker='CAACAgEAAxkBAAEIG0RkDfS4-XLEyIEaFQceYrzNsXrKMgAC-QEAAjgOghHcO4dxtT-qti8E')
            await bot.send_message(message.from_user.id,
                                   f'*–£–ø—Å!* —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –°–µ—Ä–≤–∏—Å —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ '
                                   f'–ø–æ–∑–∂–µ. –ö–æ–¥ –æ—à–∏–±–∫–∏: {type(e)}',
                                   reply_markup=keyboards_client_step2, parse_mode='Markdown')
            await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —à–∞–≥


# –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ - —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –∫–∞–∂–¥—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ —à–∞–ø–∫–µ
def registration_handler_client(disp: Dispatcher):
    disp.register_message_handler(start, commands=['start'])
    disp.register_message_handler(help_pls, commands=['help'])
    disp.register_message_handler(get_text_messages, content_types=['text'], state=None)
    disp.register_message_handler(state_login, state=LocalFSM.login)
    disp.register_message_handler(state_password, state=LocalFSM.password)
    disp.register_message_handler(state_password_conf, state=LocalFSM.password_conf)
    disp.register_message_handler(state_auth, state=LocalFSM.auth)
